<?xml version="1.0" encoding="UTF-8"?>

	<!--
		The Example JRadius Configuration File. For more information, see
		http://jradius.net/
	-->

<jradius-config debug="true">

	<!--
		General Configurations debug: set to true to get extra debuggin
		messages timeout: how long to wait for packets, 0 indicated
		indefinately
	-->

	<debug>true</debug>
	<timeout>0</timeout>


	<!-- 
       Loading a JRadius Dictionary
    -->

	<dictionary name="jradius-dictionary">
		<description>RADIUS Dictionary</description>
		<class>bean:attributeDictionary</class>
	</dictionary>


	<!--
		Configuring Packet Handlers Handlers can be defined in two ways.
		First, they can be fully defined within the context of this file, as
		shown below in the <packet-handlers>...</packet-handlers>
		configuration block. Alternatively, and preferably, handlers can be
		chained together using Apache Chains and external configuration files.
		With the <chain-catalog/> configuraiton below, we load the exmaple
		FreeRADIUS packet handler chains.
	-->
	<packet-handlers>
		<packet-handler name="OtpdServiceHandler">
			<class>otpd.business.server.service.handler.OtpdServiceAuthenticateHandler</class>
		</packet-handler>
	</packet-handlers>


	<!-- 
       Loading Packet Handler Chains
    -->

	<chain-catalog name="net/jradius/handler/catalog.xml" />
	<chain-catalog name="net/jradius/example/catalog.xml" />


	<!-- 
       Configuring the JRadius Listeners
    -->

	<listeners>

		<listener name="FreeRadiusListener">
			<description>FreeRADIUS rlm_jradius module listener (TCP)
			</description>

			<class>bean:radiusListener</class>

			<processor-class>bean:radiusProcessor</processor-class>
			<processor-threads>128</processor-threads>

			<packet-handler type="authenticate" handler="OtpdServiceHandler" />
	
			<event-handler handler="event-handler" />

			<property>
				<name>port</name>
				<value>1814</value>
			</property>
			<property>
				<name>backlog</name>
				<value>1024</value>
			</property>
			<property name="keepAlive" value="true" />
		</listener>
	</listeners>

	<!-- 
       Configuring the JRadiusSession Management Classes
    -->

	<session-manager class="bean:sessionManager"
		key-provider="bean:sessionKeyProvider" session-factory="bean:sessionFactory" />

</jradius-config>
